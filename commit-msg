#!/bin/bash

test_redmine() {
    regex="^\#[0-9]+ \- .*"
    var=`head -n 1 $1`

    function info {
      echo >&2 $1
    }

    function debug {
      debug=false
      if $debug
      then
        echo >&2 $1
      fi
    }

    function get_json {
      python -c "import sys;import json;j=json.loads(sys.stdin.read());print str(j$1);"
    }

    function get_json_encode {
      python -c "import sys;import json;j=json.loads(sys.stdin.read());print str(j$1.encode('utf-8'));"
    }

    function redmine_json {
      redmine_host=$(git config redmine.host)
      redmine_apikey=$(git config redmine.apikey)
      curl  --silent -k -H "Content-Type: application/json" -X GET -H "X-Redmine-API-Key: $redmine_apikey" "$redmine_host/$1"
    }

    if [[ "$var" =~ $regex ]]
    then
      debug "Commit message: OK"
    else
      # Define format  message forfirst line in commit message
      info "Commit need to be \"#ID - message\""
      exit 1
    fi

    issue_id=`echo $var | sed 's/\#\([0-9]*\).*/\1/'`
    issue=`redmine_json "issues/$issue_id\.json"`

    if [[ "$issue" != " " ]]
    then
      debug "Issue exist:    OK"
    else
      info "Issue $issue_id don't exist"
      exit 2;
    fi

    user=`redmine_json "users/current.json"`
    user_id=`echo $user | get_json "['user']['id']"`
    assigner_id=`echo $issue | get_json "['issue']['assigned_to']['id']"`

    if [[ $user_id == $assigner_id ]]
    then
      debug "Assigner:       OK"
    else
      info "You are working as user $user_id but issue is not assigned to you"
      exit 3;
    fi

    redmine_host=$(git config redmine.host)

    echo ""
    echo "Issue ==========================="
    echo "  subject:     "`echo $issue | get_json_encode "['issue']['subject']"`
    echo "  refs:        $redmine_host/issues/$issue_id"
    echo "  number:      #"`echo $issue | get_json "['issue']['id']"`
    echo "  priority:    "`echo $issue | get_json_encode "['issue']['priority']['name']"`
    echo "  create from: "`echo $issue | get_json_encode "['issue']['author']['name']"`
    echo "  assigned to: "`echo $issue | get_json_encode "['issue']['assigned_to']['name']"`
    echo ""
}

case "$1" in
    --about|--help|-h )
        echo "Git hook run after commit message is written that checks:"
        echo " - Commit message contains Redmine ticket ID (to disable use the key 'hook.redmine.disabled' in your git configuration)"
        echo ""
        echo "To disable all hooks add the key 'hook.disabled' in your git configuration."
        ;;
    * )
        if ! ((`git config hook.disabled`)); then
            if ! ((`git config hook.redmine.disabled`)); then
                test_redmine
            fi
        fi
        ;;
esac